@page "/reset-password"
@rendermode InteractiveServer

<PageTitle>Reset Password - Homemade</PageTitle>

<div class="min-h-screen bg-gradient-to-b from-primary-50 to-white flex items-center justify-center px-4 py-12">
    <div class="w-full max-w-md">
        <!-- Back to Login -->
        <a href="/login" class="inline-flex items-center text-neutral-600 hover:text-primary-600 mb-6 transition-colors">
            <span class="mr-2">‚Üê</span> Back to login
        </a>

        <!-- Reset Password Card -->
        <div class="bg-white rounded-2xl shadow-lg p-8">
            @if (!resetSuccess)
            {
                <!-- Initial State - Reset Password Form -->
                <div class="text-center mb-8">
                    <div class="text-5xl mb-3">üîë</div>
                    <h1 class="text-3xl font-bold text-neutral-900 mb-2">Set New Password</h1>
                    <p class="text-neutral-600">Please enter your new password</p>
                </div>

                @if (linkExpired)
                {
                    <div class="mb-6 p-4 bg-error-50 border-l-4 border-error-500 rounded">
                        <p class="text-error-700 text-sm font-semibold mb-1">Link Expired</p>
                        <p class="text-error-700 text-sm">This password reset link has expired or is invalid.</p>
                    </div>
                    <a href="/forgot-password" class="block w-full py-3 bg-primary-500 text-white text-center font-semibold rounded-xl hover:bg-primary-600 transition-colors">
                        Request New Link
                    </a>
                }
                else
                {
                    <form @onsubmit="HandleResetPassword" @onsubmit:preventDefault>
                        <!-- New Password Field -->
                        <div class="mb-5">
                            <label class="block text-sm font-semibold text-neutral-700 mb-2">
                                New Password
                            </label>
                            <div class="relative">
                                <input
                                    type="@(showPassword ? "text" : "password")"
                                    placeholder="Create a strong password"
                                    class="w-full px-4 py-3 pr-12 border-2 rounded-xl transition-colors @(passwordError ? "border-error-300 focus:border-error-500" : "border-neutral-200 focus:border-primary-500") focus:outline-none"
                                    @bind="newPassword"
                                    @oninput="() => passwordError = false"
                                    required
                                />
                                <button
                                    type="button"
                                    class="absolute right-3 top-1/2 transform -translate-y-1/2 text-neutral-400 hover:text-neutral-600"
                                    @onclick="TogglePasswordVisibility">
                                    @(showPassword ? "üëÅÔ∏è" : "üëÅÔ∏è‚Äçüó®Ô∏è")
                                </button>
                            </div>
                            @if (passwordError)
                            {
                                <p class="mt-1 text-sm text-error-700">@passwordErrorMessage</p>
                            }
                            else
                            {
                                <p class="mt-1 text-xs text-neutral-500">At least 8 characters with uppercase, lowercase, and numbers</p>
                            }
                        </div>

                        <!-- Confirm Password Field -->
                        <div class="mb-6">
                            <label class="block text-sm font-semibold text-neutral-700 mb-2">
                                Confirm New Password
                            </label>
                            <div class="relative">
                                <input
                                    type="@(showConfirmPassword ? "text" : "password")"
                                    placeholder="Confirm your password"
                                    class="w-full px-4 py-3 pr-12 border-2 rounded-xl transition-colors @(confirmPasswordError ? "border-error-300 focus:border-error-500" : "border-neutral-200 focus:border-primary-500") focus:outline-none"
                                    @bind="confirmPassword"
                                    @oninput="() => confirmPasswordError = false"
                                    required
                                />
                                <button
                                    type="button"
                                    class="absolute right-3 top-1/2 transform -translate-y-1/2 text-neutral-400 hover:text-neutral-600"
                                    @onclick="ToggleConfirmPasswordVisibility">
                                    @(showConfirmPassword ? "üëÅÔ∏è" : "üëÅÔ∏è‚Äçüó®Ô∏è")
                                </button>
                            </div>
                            @if (confirmPasswordError)
                            {
                                <p class="mt-1 text-sm text-error-700">Passwords do not match</p>
                            }
                        </div>

                        <!-- Password Strength Indicator -->
                        @if (!string.IsNullOrWhiteSpace(newPassword))
                        {
                            <div class="mb-6">
                                <div class="flex items-center justify-between mb-2">
                                    <span class="text-sm font-semibold text-neutral-700">Password Strength:</span>
                                    <span class="text-sm font-semibold @GetPasswordStrengthColor()">@GetPasswordStrengthText()</span>
                                </div>
                                <div class="h-2 bg-neutral-200 rounded-full overflow-hidden">
                                    <div class="h-full transition-all duration-300 @GetPasswordStrengthColor()" style="width: @GetPasswordStrengthPercentage()%"></div>
                                </div>
                            </div>
                        }

                        <!-- Reset Button -->
                        <button
                            type="submit"
                            class="w-full py-3 bg-primary-500 text-white font-semibold rounded-xl hover:bg-primary-600 transition-colors disabled:bg-neutral-300 disabled:cursor-not-allowed mb-6"
                            disabled="@isLoading">
                            @if (isLoading)
                            {
                                <span>Resetting password...</span>
                            }
                            else
                            {
                                <span>Reset Password</span>
                            }
                        </button>

                        <!-- Back to Login Link -->
                        <div class="text-center">
                            <a href="/login" class="inline-flex items-center text-primary-600 hover:text-primary-700 font-semibold transition-colors">
                                <span class="mr-1">‚Üê</span> Back to log in
                            </a>
                        </div>
                    </form>
                }
            }
            else
            {
                <!-- Success State - Password Reset -->
                <div class="text-center">
                    <div class="w-16 h-16 bg-success-100 rounded-full flex items-center justify-center mx-auto mb-4">
                        <svg class="w-8 h-8 text-success-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                        </svg>
                    </div>
                    <h1 class="text-3xl font-bold text-neutral-900 mb-2">Password Reset!</h1>
                    <p class="text-neutral-600 mb-8">
                        Your password has been successfully reset.<br/>
                        You can now log in with your new password.
                    </p>

                    <a href="/login" class="block w-full py-3 bg-primary-500 text-white text-center font-semibold rounded-xl hover:bg-primary-600 transition-colors">
                        Go to Login
                    </a>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private string newPassword = "";
    private string confirmPassword = "";
    private bool showPassword = false;
    private bool showConfirmPassword = false;
    private bool isLoading = false;
    private bool resetSuccess = false;
    private bool linkExpired = false; // Set to true to simulate expired link

    private bool passwordError = false;
    private string passwordErrorMessage = "";
    private bool confirmPasswordError = false;

    private void TogglePasswordVisibility()
    {
        showPassword = !showPassword;
    }

    private void ToggleConfirmPasswordVisibility()
    {
        showConfirmPassword = !showConfirmPassword;
    }

    private int CalculatePasswordStrength()
    {
        if (string.IsNullOrWhiteSpace(newPassword)) return 0;

        int strength = 0;

        // Length check
        if (newPassword.Length >= 8) strength += 25;
        if (newPassword.Length >= 12) strength += 15;

        // Character variety checks
        if (newPassword.Any(char.IsUpper)) strength += 20;
        if (newPassword.Any(char.IsLower)) strength += 20;
        if (newPassword.Any(char.IsDigit)) strength += 20;
        if (newPassword.Any(c => !char.IsLetterOrDigit(c))) strength += 20;

        return Math.Min(strength, 100);
    }

    private int GetPasswordStrengthPercentage()
    {
        return CalculatePasswordStrength();
    }

    private string GetPasswordStrengthText()
    {
        var strength = CalculatePasswordStrength();
        if (strength < 40) return "Weak";
        if (strength < 70) return "Fair";
        if (strength < 90) return "Good";
        return "Strong";
    }

    private string GetPasswordStrengthColor()
    {
        var strength = CalculatePasswordStrength();
        if (strength < 40) return "bg-error-500 text-error-700";
        if (strength < 70) return "bg-warning-500 text-warning-700";
        if (strength < 90) return "bg-accent-500 text-accent-700";
        return "bg-success-500 text-success-700";
    }

    private async Task HandleResetPassword()
    {
        // Reset errors
        passwordError = false;
        confirmPasswordError = false;

        bool hasErrors = false;

        // Validate password
        if (string.IsNullOrWhiteSpace(newPassword))
        {
            passwordError = true;
            passwordErrorMessage = "Password is required";
            hasErrors = true;
        }
        else if (newPassword.Length < 8)
        {
            passwordError = true;
            passwordErrorMessage = "Password must be at least 8 characters";
            hasErrors = true;
        }
        else if (CalculatePasswordStrength() < 40)
        {
            passwordError = true;
            passwordErrorMessage = "Please choose a stronger password";
            hasErrors = true;
        }

        // Validate confirm password
        if (newPassword != confirmPassword)
        {
            confirmPasswordError = true;
            hasErrors = true;
        }

        if (hasErrors) return;

        // Mock password reset
        isLoading = true;
        await Task.Delay(1500); // Simulate API call
        isLoading = false;

        // TODO: Replace with actual password reset logic
        // For now, always succeed
        resetSuccess = true;
    }
}
