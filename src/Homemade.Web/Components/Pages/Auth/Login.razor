@page "/login"
@rendermode InteractiveServer

<PageTitle>Login - Homemade</PageTitle>

<div class="min-h-screen bg-gradient-to-b from-primary-50 to-white flex items-center justify-center px-4 py-12">
    <div class="w-full max-w-md">
        <!-- Back to Home -->
        <a href="/" class="inline-flex items-center text-neutral-600 hover:text-primary-600 mb-6 transition-colors">
            <span class="mr-2">‚Üê</span> Back to home
        </a>

        <!-- Login Card -->
        <div class="bg-white rounded-2xl shadow-lg p-8">
            <!-- Logo/Header -->
            <div class="text-center mb-8">
                <div class="text-5xl mb-3">üçΩÔ∏è</div>
                <h1 class="text-3xl font-bold text-neutral-900 mb-2">Welcome Back</h1>
                <p class="text-neutral-600">Log in to access your recipes</p>
            </div>

            @if (showError)
            {
                <div class="mb-6 p-4 bg-error-50 border-l-4 border-error-500 rounded">
                    <p class="text-error-700 text-sm">Invalid email or password. Please try again.</p>
                </div>
            }

            @if (showSuccess)
            {
                <div class="mb-6 p-4 bg-success-50 border-l-4 border-success-500 rounded">
                    <p class="text-success-700 text-sm">‚úì Login successful! Redirecting...</p>
                </div>
            }

            <!-- Login Form -->
            <form @onsubmit="HandleLogin" @onsubmit:preventDefault>
                <!-- Email Field -->
                <div class="mb-5">
                    <label class="block text-sm font-semibold text-neutral-700 mb-2">
                        Email
                    </label>
                    <input
                        type="email"
                        placeholder="your@email.com"
                        class="w-full px-4 py-3 border-2 rounded-xl transition-colors @(emailError ? "border-error-300 focus:border-error-500" : "border-neutral-200 focus:border-primary-500") focus:outline-none"
                        @bind="email"
                        @oninput="() => emailError = false"
                        required
                    />
                    @if (emailError)
                    {
                        <p class="mt-1 text-sm text-error-700">Please enter a valid email address</p>
                    }
                </div>

                <!-- Password Field -->
                <div class="mb-5">
                    <label class="block text-sm font-semibold text-neutral-700 mb-2">
                        Password
                    </label>
                    <div class="relative">
                        <input
                            type="@(showPassword ? "text" : "password")"
                            placeholder="Enter your password"
                            class="w-full px-4 py-3 pr-12 border-2 rounded-xl transition-colors @(passwordError ? "border-error-300 focus:border-error-500" : "border-neutral-200 focus:border-primary-500") focus:outline-none"
                            @bind="password"
                            @oninput="() => passwordError = false"
                            required
                        />
                        <button
                            type="button"
                            class="absolute right-3 top-1/2 transform -translate-y-1/2 text-neutral-400 hover:text-neutral-600"
                            @onclick="TogglePasswordVisibility">
                            @(showPassword ? "üëÅÔ∏è" : "üëÅÔ∏è‚Äçüó®Ô∏è")
                        </button>
                    </div>
                    @if (passwordError)
                    {
                        <p class="mt-1 text-sm text-error-700">Password is required</p>
                    }
                </div>

                <!-- Remember Me & Forgot Password -->
                <div class="flex items-center justify-between mb-6">
                    <label class="flex items-center cursor-pointer">
                        <input
                            type="checkbox"
                            class="mr-2 w-4 h-4 text-primary-500 border-neutral-300 rounded focus:ring-primary-500"
                            @bind="rememberMe"
                        />
                        <span class="text-sm text-neutral-700">Remember me</span>
                    </label>
                    <a href="/forgot-password" class="text-sm text-primary-600 hover:text-primary-700 transition-colors">
                        Forgot password?
                    </a>
                </div>

                <!-- Login Button -->
                <button
                    type="submit"
                    class="w-full py-3 bg-primary-500 text-white font-semibold rounded-xl hover:bg-primary-600 transition-colors disabled:bg-neutral-300 disabled:cursor-not-allowed mb-6"
                    disabled="@isLoading">
                    @if (isLoading)
                    {
                        <span>Logging in...</span>
                    }
                    else
                    {
                        <span>Log In</span>
                    }
                </button>

                <!-- Divider -->
                <div class="relative mb-6">
                    <div class="absolute inset-0 flex items-center">
                        <div class="w-full border-t border-neutral-200"></div>
                    </div>
                    <div class="relative flex justify-center text-sm">
                        <span class="px-4 bg-white text-neutral-500">Or continue with</span>
                    </div>
                </div>

                <!-- Social Login Buttons (Visual Only) -->
                <div class="grid grid-cols-2 gap-3 mb-6">
                    <button
                        type="button"
                        class="flex items-center justify-center px-4 py-2 border-2 border-neutral-200 rounded-lg hover:bg-neutral-50 transition-colors"
                        @onclick="() => ShowComingSoonMessage()">
                        <svg class="w-5 h-5 mr-2" viewBox="0 0 24 24">
                            <path fill="#EA4335" d="M5.26620003,9.76452941 C6.19878754,6.93863203 8.85444915,4.90909091 12,4.90909091 C13.6909091,4.90909091 15.2181818,5.50909091 16.4181818,6.49090909 L19.9090909,3 C17.7818182,1.14545455 15.0545455,0 12,0 C7.27006974,0 3.1977497,2.69829785 1.23999023,6.65002441 L5.26620003,9.76452941 Z"/>
                            <path fill="#34A853" d="M16.0407269,18.0125889 C14.9509167,18.7163016 13.5660892,19.0909091 12,19.0909091 C8.86648613,19.0909091 6.21911939,17.076871 5.27698177,14.2678769 L1.23746264,17.3349879 C3.19279051,21.2936293 7.26500293,24 12,24 C14.9328362,24 17.7353462,22.9573905 19.834192,20.9995801 L16.0407269,18.0125889 Z"/>
                            <path fill="#4A90E2" d="M19.834192,20.9995801 C22.0291676,18.9520994 23.4545455,15.903663 23.4545455,12 C23.4545455,11.2909091 23.3454545,10.5272727 23.1818182,9.81818182 L12,9.81818182 L12,14.4545455 L18.4363636,14.4545455 C18.1187732,16.013626 17.2662994,17.2212117 16.0407269,18.0125889 L19.834192,20.9995801 Z"/>
                            <path fill="#FBBC05" d="M5.27698177,14.2678769 C5.03832634,13.556323 4.90909091,12.7937589 4.90909091,12 C4.90909091,11.2182781 5.03443647,10.4668121 5.26620003,9.76452941 L1.23999023,6.65002441 C0.43658717,8.26043162 0,10.0753848 0,12 C0,13.9195484 0.444780743,15.7301709 1.23746264,17.3349879 L5.27698177,14.2678769 Z"/>
                        </svg>
                        Google
                    </button>
                    <button
                        type="button"
                        class="flex items-center justify-center px-4 py-2 border-2 border-neutral-200 rounded-lg hover:bg-neutral-50 transition-colors"
                        @onclick="() => ShowComingSoonMessage()">
                        <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
                            <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                        </svg>
                        GitHub
                    </button>
                </div>

                <!-- Register Link -->
                <div class="text-center">
                    <span class="text-neutral-600">Don't have an account? </span>
                    <a href="/register" class="text-primary-600 hover:text-primary-700 font-semibold transition-colors">
                        Sign up
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@code {
    private string email = "";
    private string password = "";
    private bool rememberMe = false;
    private bool showPassword = false;
    private bool isLoading = false;
    private bool showError = false;
    private bool showSuccess = false;
    private bool emailError = false;
    private bool passwordError = false;

    private void TogglePasswordVisibility()
    {
        showPassword = !showPassword;
    }

    private async Task HandleLogin()
    {
        // Reset errors
        emailError = false;
        passwordError = false;
        showError = false;
        showSuccess = false;

        // Basic validation
        if (string.IsNullOrWhiteSpace(email))
        {
            emailError = true;
            return;
        }

        if (string.IsNullOrWhiteSpace(password))
        {
            passwordError = true;
            return;
        }

        // Mock login process
        isLoading = true;
        await Task.Delay(1500); // Simulate API call
        isLoading = false;

        // TODO: Replace with actual authentication logic
        // For now, show success for demo@example.com / password
        if (email == "demo@example.com" && password == "password")
        {
            showSuccess = true;
            await Task.Delay(1000);
            // TODO: Navigate to home or dashboard
            // NavigationManager.NavigateTo("/");
        }
        else
        {
            showError = true;
        }
    }

    private void ShowComingSoonMessage()
    {
        // TODO: Show toast/notification
        Console.WriteLine("Social login coming soon!");
    }
}
