@page "/"

<PageTitle>Homemade - Find Recipes by Ingredients</PageTitle>

<div class="min-h-screen bg-gradient-to-b from-primary-50 to-white">
    <!-- Hero Section -->
    <div class="container mx-auto px-4 py-12">
        <div class="text-center mb-12">
            <h1 class="text-5xl font-bold text-neutral-900 mb-4">Homemade</h1>
            <p class="text-xl text-neutral-600">Find delicious recipes using ingredients you already have</p>
        </div>

        <!-- Ingredient Search Section -->
        <div class="max-w-4xl mx-auto mb-16">
            <div class="bg-white rounded-2xl shadow-lg p-8">
                <h2 class="text-2xl font-semibold text-neutral-800 mb-6">What's in your kitchen?</h2>

                <!-- Search Input -->
                <div class="mb-6">
                    <div class="relative">
                        <input
                            type="text"
                            placeholder="Add ingredients (e.g., chicken, tomatoes, pasta)..."
                            class="w-full px-6 py-4 text-lg border-2 border-neutral-200 rounded-xl focus:border-primary-500 focus:outline-none transition-colors"
                            @bind="currentIngredient"
                            @onkeypress="HandleIngredientKeyPress"
                        />
                        <button
                            class="absolute right-3 top-1/2 transform -translate-y-1/2 px-6 py-2 bg-primary-500 text-white rounded-lg hover:bg-primary-600 transition-colors"
                            @onclick="AddIngredient">
                            Add
                        </button>
                    </div>
                </div>

                <!-- Selected Ingredients Tags -->
                @if (selectedIngredients.Count > 0)
                {
                    <div class="mb-6">
                        <div class="flex flex-wrap gap-2">
                            @foreach (var ingredient in selectedIngredients)
                            {
                                <span class="inline-flex items-center px-4 py-2 bg-primary-100 text-primary-800 rounded-full text-sm font-medium">
                                    @ingredient
                                    <button
                                        class="ml-2 text-primary-600 hover:text-primary-800 font-bold"
                                        @onclick="() => RemoveIngredient(ingredient)">
                                        ×
                                    </button>
                                </span>
                            }
                        </div>
                    </div>
                }

                <!-- Search Button -->
                <button
                    class="w-full py-4 bg-primary-500 text-white text-lg font-semibold rounded-xl hover:bg-primary-600 transition-colors disabled:bg-neutral-300 disabled:cursor-not-allowed"
                    disabled="@(selectedIngredients.Count == 0)"
                    @onclick="SearchRecipes">
                    Find Recipes (@selectedIngredients.Count ingredient@(selectedIngredients.Count != 1 ? "s" : ""))
                </button>

                <!-- Popular Ingredients Suggestions -->
                <div class="mt-6">
                    <p class="text-sm text-neutral-600 mb-3">Popular ingredients:</p>
                    <div class="flex flex-wrap gap-2">
                        @foreach (var suggestion in popularIngredients)
                        {
                            <button
                                class="px-3 py-1 bg-neutral-100 text-neutral-700 rounded-full text-sm hover:bg-primary-100 hover:text-primary-700 transition-colors"
                                @onclick="() => AddIngredientFromSuggestion(suggestion)">
                                + @suggestion
                            </button>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Quick Actions -->
        <div class="max-w-4xl mx-auto mb-16">
            <div class="grid md:grid-cols-2 gap-6">
                <a href="/recipes" class="block p-6 bg-white rounded-xl shadow hover:shadow-lg transition-shadow">
                    <div class="text-3xl mb-3">📖</div>
                    <h3 class="text-xl font-semibold text-neutral-800 mb-2">Browse All Recipes</h3>
                    <p class="text-neutral-600">Explore our complete collection of recipes</p>
                </a>

                <a href="/recipes/new" class="block p-6 bg-white rounded-xl shadow hover:shadow-lg transition-shadow">
                    <div class="text-3xl mb-3">➕</div>
                    <h3 class="text-xl font-semibold text-neutral-800 mb-2">Add New Recipe</h3>
                    <p class="text-neutral-600">Share your favorite homemade dish</p>
                </a>
            </div>
        </div>

        <!-- Featured/Recent Recipes Section -->
        <div class="max-w-6xl mx-auto">
            <h2 class="text-3xl font-bold text-neutral-800 mb-8">Featured Recipes</h2>

            <div class="grid md:grid-cols-3 gap-6">
                @foreach (var recipe in featuredRecipes)
                {
                    <div class="bg-white rounded-xl shadow overflow-hidden hover:shadow-lg transition-shadow">
                        <div class="h-48 bg-gradient-to-br from-primary-200 to-primary-300 flex items-center justify-center">
                            <span class="text-6xl">@recipe.Icon</span>
                        </div>
                        <div class="p-6">
                            <h3 class="text-xl font-semibold text-neutral-800 mb-2">@recipe.Name</h3>
                            <div class="flex flex-wrap gap-1 mb-3">
                                @foreach (var ingredient in recipe.MainIngredients)
                                {
                                    <span class="text-xs px-2 py-1 bg-neutral-100 text-neutral-600 rounded-full">@ingredient</span>
                                }
                            </div>
                            <div class="flex items-center text-sm text-neutral-600">
                                <span class="mr-4">⏱️ @recipe.CookTime min</span>
                                <span>👥 @recipe.Servings servings</span>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private string currentIngredient = "";
    private List<string> selectedIngredients = new();

    private readonly List<string> popularIngredients = new()
    {
        "Chicken", "Pasta", "Tomatoes", "Onions", "Garlic",
        "Rice", "Potatoes", "Cheese", "Eggs", "Milk"
    };

    private readonly List<RecipeMockup> featuredRecipes = new()
    {
        new RecipeMockup
        {
            Name = "Classic Chicken Pasta",
            Icon = "🍝",
            MainIngredients = new[] { "chicken", "pasta", "cream" },
            CookTime = 30,
            Servings = 4
        },
        new RecipeMockup
        {
            Name = "Vegetable Stir Fry",
            Icon = "🥘",
            MainIngredients = new[] { "vegetables", "soy sauce", "rice" },
            CookTime = 20,
            Servings = 2
        },
        new RecipeMockup
        {
            Name = "Tomato Soup",
            Icon = "🍲",
            MainIngredients = new[] { "tomatoes", "onions", "cream" },
            CookTime = 25,
            Servings = 4
        }
    };

    private void HandleIngredientKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter" && !string.IsNullOrWhiteSpace(currentIngredient))
        {
            AddIngredient();
        }
    }

    private void AddIngredient()
    {
        if (!string.IsNullOrWhiteSpace(currentIngredient) &&
            !selectedIngredients.Contains(currentIngredient.Trim(), StringComparer.OrdinalIgnoreCase))
        {
            selectedIngredients.Add(currentIngredient.Trim());
            currentIngredient = "";
        }
    }

    private void AddIngredientFromSuggestion(string ingredient)
    {
        if (!selectedIngredients.Contains(ingredient, StringComparer.OrdinalIgnoreCase))
        {
            selectedIngredients.Add(ingredient);
        }
    }

    private void RemoveIngredient(string ingredient)
    {
        selectedIngredients.Remove(ingredient);
    }

    private void SearchRecipes()
    {
        // TODO: Navigate to search results page with selected ingredients
        // For now, just a placeholder
        Console.WriteLine($"Searching for recipes with: {string.Join(", ", selectedIngredients)}");
    }

    private class RecipeMockup
    {
        public string Name { get; set; } = "";
        public string Icon { get; set; } = "";
        public string[] MainIngredients { get; set; } = Array.Empty<string>();
        public int CookTime { get; set; }
        public int Servings { get; set; }
    }
}